#!/usr/bin/env bash
# 
# Global-profile file. This is a completely customised settings file that only
# has custom, system independent, settings in it. First symlink it from home:
#   $ ln -s /path/to/dotfiles/.lbashrc
#
# Then import it from the local .bashrc/.bash_profile/.profile with the
# following:
#
#   [[ -s ~/.gprofile ]] && source ~/.gprofile
#
# font: https://github.com/andreberg/Meslo-Font/



# To set the correct collor scheme in tmux
export EDITOR=vim
export PATH=$HOME/bin:$PATH
export TERM=screen-256color-bce


# Local settings
#----------------------------------------
if [ -s ~/.lprofile ]; then
    source ~/.lprofile
else
    echo "No local settings file '.lprofile' found."
fi


export HISTTIMEFORMAT='%F %T '


# Note: Homebrew stuff needs to go first, otherwise the programs are not in the PATH

# Homebrew
#----------------------------------------
if [ -x /usr/local/bin/brew ]; then
    export BREW_HOME="/usr/local/"
    export PATH="/usr/local/bin:$PATH"  #Put brew/bin in front of standard bin in PATH
fi

# Linuxbrew
#----------------------------------------
if [ -x $HOME/.linuxbrew/bin/brew ]; then
    export BREW_HOME="$HOME/.linuxbrew"

	export PATH="$BREW_HOME/bin:$BREW_HOME/sbin:$PATH"
	export MANPATH="$BREW_HOME/share/man:$MANPATH"
	export INFOPATH="$BREW_HOME/share/info:$INFOPATH"

    export PKG_CONFIG_PATH=$BREW_HOME/lib/pkgconfig:$BREW_HOME/share/pkgconfig:$BREW_HOME/Library/ENV/pkgconfig/0
    export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/local/lib/pkgconfig:/usr/lib/pkgconfig   
    export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/lib/x86_64-linux-gnu/pkgconfig:/usr/share/pkgconfig
fi

# Go
#----------------------------------------
if hash go 2>/dev/null; then
	export GOPATH=$HOME/repos/go
	export PATH=$PATH:$GOPATH/bin
fi

# P4
#----------------------------------------
if hash p4 2>/dev/null; then
    if [ -s ~/.p4profile ]; then
        source ~/.p4profile
    else
        echo "p4 settings file not found"
    fi
fi

# Gradle
#----------------------------------------
# if hash gradle 2>/dev/null; then
#     export GRADLE_HOME=$BREW_HOME/Cellar/gradle/
# fi

# Par
#----------------------------------------
if hash par 2>/dev/null; then
    export PARINIT='rTbgqR B=.,?_A_a P=_s Q=>|}'
fi

# General Functions
#======================================================================


# usage:
# countdown 60              # 60 seconds
# countdown $((2*60*60))    # 2 days
countdown(){
    date1=$((`date +%s` + $1));
    while [ "$date1" -ge `date +%s` ]; do 
        ## Is this more than 24h away?
        days=$(($(($(( $date1 - $(date +%s))) * 1 ))/86400))
        echo -ne "$days day(s) and $(date -u --date @$(($date1 - `date +%s`)) +%H:%M:%S)\r"; 
        sleep 0.1
    done

    aplay /home/lemo7242/leon/poing.wav
    notify-send "Timer done"
}




# Custom styling
#======================================================================
# https://wiki.archlinux.org/index.php/Bash/Prompt_customization

BLACK="\[$(tput setaf 0)\]"
RED="\[$(tput setaf 1)\]"
GREEN="\[$(tput setaf 2)\]"
YELLOW="\[$(tput setaf 3)\]"
BLUE="\[$(tput setaf 4)\]"
PINK="\[$(tput setaf 5)\]"
CYAN="\[$(tput setaf 6)\]"
WHITE="\[$(tput setaf 7)\]"
NO_COLLOR="\[$(tput sgr0)\]"

# An extra character is added every level of nesting
PRE_CHAR='❱'
if [[ ! -n "${LC_NESTING_DEPTH}" ]]; then
    export LC_NESTING_DEPTH=1
else
    export LC_NESTING_DEPTH=$(expr 1 + $LC_NESTING_DEPTH)
fi
PS1_PREQUAL=$(printf "$PRE_CHAR"'%.s' $(eval "echo {1.."$(($LC_NESTING_DEPTH))"}");)

getNestingDepth() {
    echo $(( 1 + $LC_NESTING_DEPTH ))
}

getPrequal() {
    result=''
    for ((i=0; i<$(getNestingDepth); i++)); do
        result=$result$PRE_CHAR
    done
    echo $result
}

getPrettyTmuxSessionCount() {
    echo $(intToSubScript $(getTmuxSessionCount))
}

intToSubScript() {
    echo -e "\\u208$1"
}

getTmuxSessionCount() {
    echo $(tmux ls 2> /dev/null | wc -l | bc)
}

getPrettyJobCount() {
    jobCount=$( getJobCount )
    if [ $jobCount -gt 0 ]; then
        echo " ⁽$(intToSuperScript $jobCount)⁾"
        # echo "$(intToSuperScript $jobCount)"
        # echo " $jobCount" 
    else
        echo ''
    fi
}

intToSuperScript() {
    #Unicode is sort of a mess here
    if [ $1 == 1 ]; then
        echo -e "\\u00B9"
    elif [ $1 -gt 1 -a $1 -lt 4 ]; then
        echo -e "\\u00B$1"
    else
        echo -e "\\u207$1"
    fi
}

getJobCount() {
    echo $( jobs | wc -l | bc )
}




# prints '(*master)' when on master. The '*' is added when there are local changes
git_status() {
    # If the branch has changes
    `git diff --quiet --ignore-submodules HEAD 2>/dev/null`
    [ $? -eq 1 ] && local GIT_CHANGE='*'        # $? is the return value of the last command

    # The branch name
    local GIT_BRANCH=`git rev-parse --abbrev-ref HEAD 2> /dev/null`

    # When a git-branch could be determined, print it surrounded by '()'
    if [[ -n "${GIT_BRANCH}" ]]; then
        echo "($GIT_CHANGE$GIT_BRANCH) "
    fi
}


# `man bash` -> PROMPTING
export PS1="$BLUE\$(getPrettyTmuxSessionCount)$PS1_PREQUAL\$(getPrettyJobCount)$NO_COLLOR \w \$(git_status)$WHITE$ $NO_COLLOR"
